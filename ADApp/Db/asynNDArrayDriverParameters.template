# This file was automatically generated
# *** Please do not edit this file: edit the source file instead. ***

# Group: ADSetup
record(stringin, "$(P)$(R)PortName_RBV")
{
    field(DESC, "PortName_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))PORT_NAME_SELF")
}

record(stringin, "$(P)$(R)Manufacturer_RBV")
{
    field(DESC, "Manufacturer_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))MANUFACTURER")
}

record(stringin, "$(P)$(R)Model_RBV")
{
    field(DESC, "Model_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))MODEL")
}

record(stringin, "$(P)$(R)SerialNumber_RBV")
{
    field(DESC, "SerialNumber_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))SERIAL_NUMBER")
}

record(stringin, "$(P)$(R)FirmwareVersion_RBV")
{
    field(DESC, "FirmwareVersion_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FIRMWARE_VERSION")
}

record(stringin, "$(P)$(R)SDKVersion_RBV")
{
    field(DESC, "SDKVersion_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))SDK_VERSION")
}

record(stringin, "$(P)$(R)DriverVersion_RBV")
{
    field(DESC, "DriverVersion_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))DRIVER_VERSION")
}

record(stringin, "$(P)$(R)ADCoreVersion_RBV")
{
    field(DESC, "ADCoreVersion_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ADCORE_VERSION")
}

# Group: ADReadout
record(longin, "$(P)$(R)ArraySizeX_RBV")
{
    field(DESC, "ArraySizeX_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ARRAY_SIZE_X")
}

record(longin, "$(P)$(R)ArraySizeY_RBV")
{
    field(DESC, "ArraySizeY_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ARRAY_SIZE_Y")
}

record(longin, "$(P)$(R)ArraySize_RBV")
{
    field(DESC, "ArraySize_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ARRAY_SIZE")
}

record(mbbi, "$(P)$(R)DataType_RBV")
{
    field(DESC, "DataType")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))DATA_TYPE")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "4")
    field(FVVL, "5")
    field(SXVL, "6")
    field(SVVL, "7")
    field(EIVL, "8")
    field(NIVL, "9")
    field(ZRST, "Int8")
    field(ONST, "UInt8")
    field(TWST, "Int16")
    field(THST, "UInt16")
    field(FRST, "Int32")
    field(FVST, "UInt32")
    field(SXST, "Int64")
    field(SVST, "UInt64")
    field(EIST, "Float32")
    field(NIST, "Float64")
}

record(mbbo, "$(P)$(R)DataType")
{
    field(DESC, "DataType")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "$(DATATYPE=0)")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))DATA_TYPE")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "4")
    field(FVVL, "5")
    field(SXVL, "6")
    field(SVVL, "7")
    field(EIVL, "8")
    field(NIVL, "9")
    field(ZRST, "Int8")
    field(ONST, "UInt8")
    field(TWST, "Int16")
    field(THST, "UInt16")
    field(FRST, "Int32")
    field(FVST, "UInt32")
    field(SXST, "Int64")
    field(SVST, "UInt64")
    field(EIST, "Float32")
    field(NIST, "Float64")
}

record(mbbi, "$(P)$(R)ColorMode_RBV")
{
    field(DESC, "ColorMode")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))COLOR_MODE")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "4")
    field(FVVL, "5")
    field(SXVL, "6")
    field(SVVL, "7")
    field(ZRST, "Mono")
    field(ONST, "Bayer")
    field(TWST, "RGB1")
    field(THST, "RGB2")
    field(FRST, "RGB3")
    field(FVST, "YUV444")
    field(SXST, "YUV422")
    field(SVST, "YUV421")
}

record(mbbo, "$(P)$(R)ColorMode")
{
    field(DESC, "ColorMode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))COLOR_MODE")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "4")
    field(FVVL, "5")
    field(SXVL, "6")
    field(SVVL, "7")
    field(ZRST, "Mono")
    field(ONST, "Bayer")
    field(TWST, "RGB1")
    field(THST, "RGB2")
    field(FRST, "RGB3")
    field(FVST, "YUV444")
    field(SXST, "YUV422")
    field(SVST, "YUV421")
}

# Group: ADCollect
record(longin, "$(P)$(R)NumQueuedArrays")
{
    field(DESC, "NumQueuedArrays")
    field(SCAN, "$(SCANRATE=I/O Intr)")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))NUM_QUEUED_ARRAYS")
}

record(bo, "$(P)$(R)WaitForPlugins")
{
    field(DESC, "WaitForPlugins")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))WAIT_FOR_PLUGINS")
    field(ZNAM, "No")
    field(ONAM, "Yes")
}

record(bi, "$(P)$(R)Acquire_RBV")
{
    field(DESC, "Acquire")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(FLNK, "$(P)$(R)SetAcquireBusy")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ACQUIRE")
    field(ZSV,  "NO_ALARM")
    field(OSV,  "MINOR")
    field(ZNAM, "Done")
    field(ONAM, "Acquiring")
}

record(bo, "$(P)$(R)Acquire")
{
    field(DESC, "Acquire")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(FLNK, "$(P)$(R)SetAcquireBusy")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ACQUIRE")
    field(ZNAM, "Done")
    field(ONAM, "Acquiring")
    field(ZSV,  "NO_ALARM")
    field(OSV,  "MINOR")
    info(asyn:READBACK, "1")
}

record(longin, "$(P)$(R)ArrayCounter_RBV")
{
    field(DESC, "ArrayCounter")
    field(SCAN, "$(SCANRATE=I/O Intr)")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ARRAY_COUNTER")
}

record(longout, "$(P)$(R)ArrayCounter")
{
    field(DESC, "ArrayCounter")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ARRAY_COUNTER")
}

record(bi, "$(P)$(R)ArrayCallbacks_RBV")
{
    field(DESC, "ArrayCallbacks")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ARRAY_CALLBACKS")
    field(ZSV,  "NO_ALARM")
    field(OSV,  "MINOR")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
}

record(bo, "$(P)$(R)ArrayCallbacks")
{
    field(DESC, "ArrayCallbacks")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "1")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ARRAY_CALLBACKS")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    field(ZSV,  "NO_ALARM")
    field(OSV,  "MINOR")
}

# Group: ADAttrFile
record(waveform, "$(P)$(R)NDAttributesFile")
{
    field(DESC, "NDAttributesFile")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ND_ATTRIBUTES_FILE")
    field(NELM, "256")
    field(FTVL, "CHAR")
}

record(waveform, "$(P)$(R)NDAttributesMacros")
{
    field(DESC, "NDAttributesMacros")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ND_ATTRIBUTES_MACROS")
    field(NELM, "256")
    field(FTVL, "CHAR")
}

record(mbbi, "$(P)$(R)NDAttributesStatus")
{
    field(DESC, "NDAttributesStatus")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ND_ATTRIBUTES_STATUS")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(ZRST, "Attributes file OK")
    field(ONST, "File not found")
    field(TWST, "XML syntax error")
    field(THST, "Macro substitution error")
    field(ZRSV, "NO_ALARM")
    field(ONSV, "MINOR")
    field(TWSV, "MAJOR")
    field(THSV, "MAJOR")
}

# Group: NDFile
record(mbbi, "$(P)$(R)FileFormat_RBV")
{
    field(DESC, "FileFormat")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_FORMAT")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(ZRST, "netCDF")
    field(ONST, "Undefined")
}

record(mbbo, "$(P)$(R)FileFormat")
{
    field(DESC, "FileFormat")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_FORMAT")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(ZRST, "netCDF")
    field(ONST, "Undefined")
}

# Group: NDFileBase
record(bi, "$(P)$(R)FilePathExists_RBV")
{
    field(DESC, "FilePathExists_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_PATH_EXISTS")
    field(ZSV,  "MAJOR")
    field(OSV,  "NO_ALARM")
    field(ZNAM, "No")
    field(ONAM, "Yes")
}

record(waveform, "$(P)$(R)FilePath_RBV")
{
    field(DESC, "FilePath")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_PATH")
    field(NELM, "256")
    field(FTVL, "CHAR")
}

record(waveform, "$(P)$(R)FilePath")
{
    field(DESC, "FilePath")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_PATH")
    field(NELM, "256")
    field(FTVL, "CHAR")
}

record(longin, "$(P)$(R)CreateDirectory_RBV")
{
    field(DESC, "CreateDirectory")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))CREATE_DIR")
}

record(longout, "$(P)$(R)CreateDirectory")
{
    field(DESC, "CreateDirectory")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))CREATE_DIR")
}

record(waveform, "$(P)$(R)FileName_RBV")
{
    field(DESC, "FileName")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_NAME")
    field(NELM, "256")
    field(FTVL, "CHAR")
}

record(waveform, "$(P)$(R)FileName")
{
    field(DESC, "FileName")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_NAME")
    field(NELM, "256")
    field(FTVL, "CHAR")
}

record(longin, "$(P)$(R)FileNumber_RBV")
{
    field(DESC, "FileNumber")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_NUMBER")
}

record(longout, "$(P)$(R)FileNumber")
{
    field(DESC, "FileNumber")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "1")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_NUMBER")
    info(asyn:READBACK, "1")
}

record(stringin, "$(P)$(R)TempSuffix_RBV")
{
    field(DESC, "TempSuffix")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_TEMP_SUFFIX")
}

record(stringout, "$(P)$(R)TempSuffix")
{
    field(DESC, "TempSuffix")
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_TEMP_SUFFIX")
}

record(bi, "$(P)$(R)LazyOpen_RBV")
{
    field(DESC, "LazyOpen")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_LAZY_OPEN")
    field(ZNAM, "No")
    field(ONAM, "Yes")
}

record(bo, "$(P)$(R)LazyOpen")
{
    field(DESC, "LazyOpen")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_LAZY_OPEN")
    field(ZNAM, "No")
    field(ONAM, "Yes")
}

record(bi, "$(P)$(R)AutoIncrement_RBV")
{
    field(DESC, "AutoIncrement")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))AUTO_INCREMENT")
    field(ZNAM, "No")
    field(ONAM, "Yes")
}

record(bo, "$(P)$(R)AutoIncrement")
{
    field(DESC, "AutoIncrement")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "1")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))AUTO_INCREMENT")
    field(ZNAM, "No")
    field(ONAM, "Yes")
}

record(waveform, "$(P)$(R)FileTemplate_RBV")
{
    field(DESC, "FileTemplate")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_TEMPLATE")
    field(NELM, "256")
    field(FTVL, "CHAR")
}

record(waveform, "$(P)$(R)FileTemplate")
{
    field(DESC, "FileTemplate")
    field(DTYP, "asynOctetWrite")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FILE_TEMPLATE")
    field(NELM, "256")
    field(FTVL, "CHAR")
}

record(waveform, "$(P)$(R)FullFileName_RBV")
{
    field(DESC, "FullFileName_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))FULL_FILE_NAME")
    field(NELM, "512")
    field(FTVL, "CHAR")
}

record(bi, "$(P)$(R)WriteFile_RBV")
{
    field(DESC, "WriteFile")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))WRITE_FILE")
    field(ZSV,  "NO_ALARM")
    field(OSV,  "MINOR")
    field(ONAM, "Writing")
}

record(busy, "$(P)$(R)WriteFile")
{
    field(DESC, "WriteFile")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))WRITE_FILE")
    field(ONAM, "Writing")
    field(ZSV,  "NO_ALARM")
    field(OSV,  "MINOR")
}

record(bi, "$(P)$(R)ReadFile_RBV")
{
    field(DESC, "ReadFile")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))READ_FILE")
    field(ZSV,  "NO_ALARM")
    field(OSV,  "MINOR")
    field(ONAM, "Reading")
}

record(busy, "$(P)$(R)ReadFile")
{
    field(DESC, "ReadFile")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))READ_FILE")
    field(ONAM, "Reading")
    field(ZSV,  "NO_ALARM")
    field(OSV,  "MINOR")
}

record(bi, "$(P)$(R)AutoSave_RBV")
{
    field(DESC, "AutoSave")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))AUTO_SAVE")
    field(ZNAM, "No")
    field(ONAM, "Yes")
}

record(bo, "$(P)$(R)AutoSave")
{
    field(DESC, "AutoSave")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))AUTO_SAVE")
    field(ZNAM, "No")
    field(ONAM, "Yes")
}

record(longin, "$(P)$(R)NumCaptured_RBV")
{
    field(DESC, "NumCaptured_RBV")
    field(SCAN, "$(SCANRATE=I/O Intr)")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))NUM_CAPTURED")
}

record(mbbi, "$(P)$(R)FileWriteMode_RBV")
{
    field(DESC, "FileWriteMode")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))WRITE_MODE")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(ZRST, "Single")
    field(ONST, "Capture")
    field(TWST, "Stream")
}

record(mbbo, "$(P)$(R)FileWriteMode")
{
    field(DESC, "FileWriteMode")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))WRITE_MODE")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(ZRST, "Single")
    field(ONST, "Capture")
    field(TWST, "Stream")
}

record(longin, "$(P)$(R)NumCapture_RBV")
{
    field(DESC, "NumCapture")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))NUM_CAPTURE")
}

record(longout, "$(P)$(R)NumCapture")
{
    field(DESC, "NumCapture")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "1")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))NUM_CAPTURE")
}

record(bi, "$(P)$(R)Capture_RBV")
{
    field(DESC, "Capture")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))CAPTURE")
    field(ZSV,  "NO_ALARM")
    field(OSV,  "MINOR")
    field(ONAM, "Capturing")
}

record(busy, "$(P)$(R)Capture")
{
    field(DESC, "Capture")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))CAPTURE")
    field(ONAM, "Capturing")
    field(ZSV,  "NO_ALARM")
    field(OSV,  "MINOR")
}

record(bi, "$(P)$(R)DeleteDriverFile_RBV")
{
    field(DESC, "DeleteDriverFile")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))DELETE_DRIVER_FILE")
    field(ZNAM, "No")
    field(ONAM, "Yes")
}

record(bo, "$(P)$(R)DeleteDriverFile")
{
    field(DESC, "DeleteDriverFile")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))DELETE_DRIVER_FILE")
    field(ZNAM, "No")
    field(ONAM, "Yes")
}

record(bi, "$(P)$(R)WriteStatus")
{
    field(DESC, "WriteStatus")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))WRITE_STATUS")
    field(ZSV,  "NO_ALARM")
    field(OSV,  "MAJOR")
    field(ZNAM, "Write OK")
    field(ONAM, "Write error")
}

record(waveform, "$(P)$(R)WriteMessage")
{
    field(DESC, "WriteMessage")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))WRITE_MESSAGE")
    field(NELM, "256")
    field(FTVL, "CHAR")
}

# Group: NDArrayBaseMisc
record(bo, "$(P)$(R)EmptyFreeList")
{
    field(DESC, "EmptyFreeList")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))POOL_EMPTY_FREELIST")
}

record(bi, "$(P)$(R)AcquireBusyCB")
{
    field(DESC, "AcquireBusyCB")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ACQUIRE_BUSY")
    field(ZSV,  "NO_ALARM")
    field(OSV,  "MINOR")
    field(ZNAM, "Done")
    field(ONAM, "Acquiring")
}

record(mbbi, "$(P)$(R)BayerPattern_RBV")
{
    field(DESC, "BayerPattern_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))BAYER_PATTERN")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(ZRST, "RGGB")
    field(ONST, "GBRG")
    field(TWST, "GRBG")
    field(THST, "BGGR")
}

record(longin, "$(P)$(R)ArraySizeZ_RBV")
{
    field(DESC, "ArraySizeZ_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ARRAY_SIZE_Z")
}

record(stringin, "$(P)$(R)Codec_RBV")
{
    field(DESC, "Codec_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))CODEC")
}

record(longin, "$(P)$(R)CompressedSize_RBV")
{
    field(DESC, "CompressedSize_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))COMPRESSED_SIZE")
}

record(longin, "$(P)$(R)UniqueId_RBV")
{
    field(DESC, "UniqueId_RBV")
    field(SCAN, "$(SCANRATE=I/O Intr)")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))UNIQUE_ID")
}

record(ai, "$(P)$(R)TimeStamp_RBV")
{
    field(DESC, "TimeStamp_RBV")
    field(SCAN, "$(SCANRATE=I/O Intr)")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))TIME_STAMP")
    field(PREC, "3")
}

record(longin, "$(P)$(R)EpicsTSSec_RBV")
{
    field(DESC, "EpicsTSSec_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))EPICS_TS_SEC")
}

record(longin, "$(P)$(R)EpicsTSNsec_RBV")
{
    field(DESC, "EpicsTSNsec_RBV")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))EPICS_TS_NSEC")
}

record(ai, "$(P)$(R)PoolMaxMem")
{
    field(DESC, "PoolMaxMem")
    field(SCAN, "Passive")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))POOL_MAX_MEMORY")
    field(PREC, "1")
    field(EGU,  "MB")
}

record(ai, "$(P)$(R)PoolUsedMem")
{
    field(DESC, "PoolUsedMem")
    field(SCAN, "1 second")
    field(DTYP, "asynFloat64")
    field(FLNK, "$(P)$(R)PoolAllocBuffers")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))POOL_USED_MEMORY")
    field(PREC, "1")
    field(EGU,  "MB")
}

record(longin, "$(P)$(R)PoolAllocBuffers")
{
    field(DESC, "PoolAllocBuffers")
    field(DTYP, "asynInt32")
    field(FLNK, "$(P)$(R)PoolFreeBuffers")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))POOL_ALLOC_BUFFERS")
}

record(longin, "$(P)$(R)PoolFreeBuffers")
{
    field(DESC, "PoolFreeBuffers")
    field(DTYP, "asynInt32")
    field(FLNK, "$(P)$(R)PoolUsedBuffers")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))POOL_FREE_BUFFERS")
}

record(longin, "$(P)$(R)NDimensions_RBV")
{
    field(DESC, "NDimensions")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ARRAY_NDIMENSIONS")
}

record(longout, "$(P)$(R)NDimensions")
{
    field(DESC, "NDimensions")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ARRAY_NDIMENSIONS")
}

record(waveform, "$(P)$(R)Dimensions_RBV")
{
    field(DESC, "Dimensions")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32ArrayIn")
    field(FLNK, "$(P)$(R)Dim0SA_RBV")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ARRAY_DIMENSIONS")
    field(NELM, "10")
    field(FTVL, "LONG")
}

record(waveform, "$(P)$(R)Dimensions")
{
    field(DESC, "Dimensions")
    field(DTYP, "asynInt32ArrayOut")
    field(FLNK, "$(P)$(R)Dim0SA_RBV")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ARRAY_DIMENSIONS")
    field(NELM, "10")
    field(FTVL, "LONG")
}

record(waveform, "$(P)$(R)PVI")
{
    field(DESC, "Driver PV Interface")
    field(SCAN, "I/O Intr")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))PVI_PARAM_TREE")
    field(NELM, "100000")
    field(FTVL, "CHAR")
}
