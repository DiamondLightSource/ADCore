#=================================================================#
# Template file: NDFileTIFF.template
# Database for NDFileTIFF driver, which saves NDArray data 
# in the TIFF file format
# Mark Rivers
# May 10, 2009

# Macros:
# % macro, P, Device Prefix
# % macro, R, Device Suffix
# % macro, PORT, Asyn Port name

# This associates the template with an edm screen
# % gui, $(PORT), edmtab, NDFileTIFF.edl, P=$(P),R=$(R)

# This associates a BOY screen with the template
# % gui, $(PORT), boydetail,ADApp_opi/dls/tiff_detail.opi, P=$(P), R=$(R), DESC=TIFF File
# % gui, $(PORT), boyembed, ADApp_opi/dls/tiff_embed_box.opi, P=$(P), R=$(R), DESC=TIFF File
# % gui, $(PORT), boyembed, ADApp_opi/dls/tiff_embed.opi, P=$(P), R=$(R), DESC=TIFF File

# Info
# % gui, $(PORT), readback, Port name,   $(P)$(R)PortName_RBV
# % gui, $(PORT), readback, Plugin type,   $(P)$(R)PluginType_RBV
# Input
# % gui, $(PORT), demand, Input,   $(P)$(R)NDArrayPort
# % gui, $(PORT), readback, Input,   $(P)$(R)NDArrayPort_RBV
# % gui, $(PORT), enum, Callbacks,   $(P)$(R)EnableCallbacks
# % gui, $(PORT), readback, Callbacks,   $(P)$(R)EnableCallbacks_RBV
# % gui, $(PORT), demand, Min Time,   $(P)$(R)MinCallbackTime
# % gui, $(PORT), readback, Min Time,   $(P)$(R)MinCallbackTime_RBV
# % gui, $(PORT), enum, Blocking,   $(P)$(R)BlockingCallbacks
# % gui, $(PORT), readback, Blocking,   $(P)$(R)BlockingCallbacks_RBV
# % gui, $(PORT), demand, Array counter,   $(P)$(R)ArrayCounter
# % gui, $(PORT), readback, Array counter,   $(P)$(R)ArrayCounter_RBV
# % gui, $(PORT), readback, Array rate,   $(P)$(R)ArrayRate_RBV
# % gui, $(PORT), readback, Queue use,   $(P)$(R)QueueUse
# % gui, $(PORT), readback, Queue size,   $(P)$(R)QueueSize
# % gui, $(PORT), demand, Dropped,   $(P)$(R)DroppedArrays
# % gui, $(PORT), readback, Dropped,   $(P)$(R)DroppedArrays_RBV
# % gui, $(PORT), readback, Num Dimensions,   $(P)$(R)NDimensions_RBV
# % gui, $(PORT), readback, Dim 0 size,   $(P)$(R)ArraySize0_RBV
# % gui, $(PORT), readback, Dim 1 size,   $(P)$(R)ArraySize1_RBV
# % gui, $(PORT), readback, Dim 2 size,   $(P)$(R)ArraySize2_RBV
# % gui, $(PORT), readback, In data type,   $(P)$(R)DataType_RBV
# % gui, $(PORT), readback, Colour mode,   $(P)$(R)ColorMode_RBV
# % gui, $(PORT), readback, Bayer pattern,   $(P)$(R)BayerPattern_RBV
# % gui, $(PORT), readback, Unique id,   $(P)$(R)UniqueId_RBV
# % gui, $(PORT), readback, Timestamp,   $(P)$(R)TimeStamp_RBV
# File
# % gui, $(PORT), demand, File path,   $(P)$(R)FilePath
# % gui, $(PORT), readback, File path RBV,   $(P)$(R)FilePath_RBV
# % gui, $(PORT), readback, File path exists,   $(P)$(R)FilePathExists_RBV
# % gui, $(PORT), demand, File name,   $(P)$(R)FileName
# % gui, $(PORT), readback, File name,   $(P)$(R)FileName_RBV
# % gui, $(PORT), demand, File number,   $(P)$(R)FileNumber
# % gui, $(PORT), readback, File number,   $(P)$(R)FileNumber_RBV
# % gui, $(PORT), enum, Auto increment,   $(P)$(R)AutoIncrement
# % gui, $(PORT), readback, Auto increment,   $(P)$(R)AutoIncrement_RBV
# % gui, $(PORT), demand, File format,   $(P)$(R)FileTemplate
# % gui, $(PORT), readback, File format,   $(P)$(R)FileTemplate_RBV
# % gui, $(PORT), demand, N to capture,   $(P)$(R)NumCapture
# % gui, $(PORT), readback, N to capture,   $(P)$(R)NumCapture_RBV
# % gui, $(PORT), readback, N captured,   $(P)$(R)NumCaptured_RBV
# % gui, $(PORT), enum, Auto save,   $(P)$(R)AutoSave
# % gui, $(PORT), readback, Auto save,   $(P)$(R)AutoSave_RBV
# % gui, $(PORT), enum, Capture mode,   $(P)$(R)FileWriteMode
# % gui, $(PORT), readback, Capture mode,   $(P)$(R)FileWriteMode_RBV
# % gui, $(PORT), enum, Capture,   $(P)$(R)Capture
# % gui, $(PORT), readback, Capture,   $(P)$(R)Capture_RBV
# % gui, $(PORT), readback, Write message,   $(P)$(R)WriteMessage
# % gui, $(PORT), readback, Write status,   $(P)$(R)WriteStatus
# % gui, $(PORT), readback, Write filename,   $(P)$(R)FullFileName_RBV
# % gui, $(PORT), enum, Lazy open,   $(P)$(R)LazyOpen
# % gui, $(PORT), readback, Lazy open,   $(P)$(R)LazyOpen_RBV
# % gui, $(PORT), demand, Temporary suffix,   $(P)$(R)TempSuffix
# % gui, $(PORT), readback, Temporary suffix,   $(P)$(R)TempSuffix_RBV
# % gui, $(PORT), demand, Create directories,   $(P)$(R)CreateDirectory
# % gui, $(PORT), readback, Create directories,   $(P)$(R)CreateDirectory_RBV
# Memory
# % gui, $(PORT), readback, Max memory,   $(P)$(R)PoolMaxMem
# % gui, $(PORT), readback, Max buffers,   $(P)$(R)PoolMaxBuffers
# % gui, $(PORT), readback, Used memory,   $(P)$(R)PoolUsedMem
# % gui, $(PORT), readback, Allocated buffers,   $(P)$(R)PoolAllocBuffers
# % gui, $(PORT), readback, Free buffers,   $(P)$(R)PoolFreeBuffers

include "NDFile.template"
include "NDPluginBase.template"

# We replace some fields in records defined in NDFile.template
# File data format 
record(mbbo, "$(P)$(R)FileFormat")
{
    field(ZRST, "TIFF")
    field(ZRVL, "0")
    field(ONST, "Invalid")
    field(ONVL, "1")
}

record(mbbi, "$(P)$(R)FileFormat_RBV")
{
    field(ZRST, "TIFF")
    field(ZRVL, "0")
    field(ONST, "Undefined")
    field(ONVL, "1")
}

